# - name: Ensure Firewall is disabled
#   ansible.builtin.systemd:
#     name: firewalld
#     state: stopped
#     enabled: false
#   failed_when: false

# - name: Disable SELinux
#   ansible.posix.selinux:
#     state: disabled

- name: Retrieve the Enterprise Linux details
  ansible.builtin.setup:
    gather_subset:
     - distribution_major_version
     - os_family

- name: Ensure {{ tmp_dir }} exists
  ansible.builtin.file:
    path: "{{ tmp_dir }}"
    state: directory
    
- name: Enable EPEL Repo (Online)
  ansible.builtin.dnf:
    name: epel-release
    state: present
  become: true
  when: not k8s_offline

- name: Add the Kubernetes yum repository
  ansible.builtin.copy:
    dest: /etc/yum.repos.d/kubernetes.repo
    content: | 
      [kubernetes]
      name=Kubernetes
      baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
      enabled=1
      gpgcheck=1
      gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
  become: true
  when: not k8s_offline

- name: Install Necessary RPMs (if offline)
  ansible.builtin.dnf:
    name: "{{ lookup('ansible.builtin.fileglob', '{{ playbook_dir }}/../offline/packages/*.rpm') }}"
    state: present
    disable_gpg_check: true
    cacheonly: true
  become: true
  when: k8s_offline

- name: Install necessary packages for Enterprise Linux
  ansible.builtin.dnf:
    name: "{{ common_packages[ansible_distribution_major_version|int] }}"
#    update_cache: true
    state: present
  become: true
  when: not k8s_offline

- name: Install AKS Packages
  ansible.builtin.include_tasks: aks_packages.yml
  when: k8s_platform == "aks"

- name: Install GKE Packages
  ansible.builtin.include_tasks: gke_packages.yml
  when: k8s_platform == "gke"

- name: Install EKS Packages
  ansible.builtin.include_tasks: eks_packages.yml
  when: k8s_platform == "eks"

