# - name: Ensure Firewall is disabled
#   ansible.builtin.systemd:
#     name: firewalld
#     state: stopped
#     enabled: false
#   failed_when: false

# - name: Disable SELinux
#   ansible.posix.selinux:
#     state: disabled

- name: Retrieve the Enterprise Linux details
  ansible.builtin.setup:
    gather_subset:
     - distribution_major_version
     - os_family

- name: Ensure {{ tmp_dir }} exists
  ansible.builtin.file:
    path: "{{ tmp_dir }}"
    state: directory
    
- name: Enable EPEL Repo (Online)
  ansible.builtin.dnf:
    name: epel-release
    state: present
  become: true

- name: Add the Kubernetes yum repository
  ansible.builtin.copy:
    dest: /etc/yum.repos.d/kubernetes.repo
    content: | 
      [kubernetes]
      name=Kubernetes
      baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
      enabled=1
      gpgcheck=1
      gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
  become: true
  when: not k8s_offline

- name: Install Kubectl from RPM (if offline)
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
    disable_gpg_check: true
    cacheonly: true
  become: true
  with_fileglob: "{{ playbook_dir }}/../offline/packages/kubectl-*"
  when: k8s_offline

- name: Install necessary packages for Enterprise Linux
  ansible.builtin.dnf:
    name: "{{ common_packages[ansible_distribution_major_version|int] }}"
#    update_cache: true
    state: present
  become: true

- name: Install aws python packages
  ansible.builtin.pip:
    name:
      - boto3
      - botocore
  when: k8s_platform == "eks"

# - name: Read collections paths from ansible.cfg
#   ansible.builtin.set_fact:
#     collections_paths: "{{ lookup('ini', 'collections_path section=defaults file=../ansible.cfg') }}"
#   when: k8s_platform == "aks"

# - name: Install pip packages for Azure collections
#   ansible.builtin.pip:
#     chdir: "{{ playbook_dir }}/.."
#     requirements: "{{ collections_paths.split(':') | first }}/ansible_collections/azure/azcollection/requirements.txt"
#   when: k8s_platform == "aks"
#   become: yes

- name: Check for existing eksctl installation
  ansible.builtin.stat:
    path: /usr/local/bin/eksctl
  register: eksctl_file

# - ansible.builtin.debug:
#     var: eksctl_file

- name: Ensure eksctl is installed
  block:
    - name: Download eksctl
      ansible.builtin.get_url:
        url: https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_linux_amd64.tar.gz
        dest: /tmp/eksctl_linux_amd64.tar.gz
    
    - name:
      ansible.builtin.unarchive:
        src: /tmp/eksctl_linux_amd64.tar.gz
        dest: /usr/local/bin/

    - name:
      ansible.builtin.file:
        path: /tmp/eksctl_linux_amd64.tar.gz
        state: absent

  when:
    - not eksctl_file.stat.exists or not eksctl_file.stat.xusr or not eksctl_file.stat.xgrp or not eksctl_file.stat.xoth
    - k8s_platform == "eks"

- name: Install AKS Packages
  ansible.builtin.include_tasks: aks_packages.yml
