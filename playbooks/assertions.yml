# Copyright (c) 2023, Ctrl IQ, Inc. All rights reserved.

- hosts: localhost
  gather_facts: no
  connection: local
  become: false

  vars_files:
    - ["../custom.config.yml", "../default.config.yml"]

  tasks:

    - name: Verify that LEDGER_HOSTNAME and ASCENDER_HOSTNAME are different
      ansible.builtin.assert:
        that:
          - LEDGER_HOSTNAME != ASCENDER_HOSTNAME
        fail_msg: "LEDGER_HOSTNAME ({{ LEDGER_HOSTNAME }}) and ASCENDER_HOSTNAME ({{ ASCENDER_HOSTNAME }}) must be different"
      when: LEDGER_HOSTNAME is defined

- hosts: ascender
  gather_facts: yes
  become: false

  vars_files:
    - ["../custom.config.yml", "../default.config.yml"]

  tasks:

    - name: Retrieve the Linux details
      block:

        - name: Verify x86_64 architecture
          ansible.builtin.assert:
            that:
              - ansible_architecture == "x86_64"
            fail_msg: "K3s server must be of type x86_64"

        - name: Verify minimum processor count when Ledger is not being installed
          ansible.builtin.assert:
            that:
              - ansible_processor_vcpus >= 2
              - ansible_memtotal_mb >= 3500
            fail_msg: "K3s server requires at least 2 vCPUs and 4000 MB of memory; target server has {{ ansible_processor_vcpus }} vCPUs and {{ ansible_memtotal_mb }} MBs of memory"
          when: not LEDGER_INSTALL

        - name: Verify minimum processor count when Ledger is being installed
          ansible.builtin.assert:
            that:
              - ansible_processor_vcpus >= 2
              - ansible_memtotal_mb >= 7500
            fail_msg: "K3s server requires at least 2 vCPUs and 8000 MB of memory; target server has {{ ansible_processor_vcpus }} vCPUs and {{ ansible_memtotal_mb }} MBs of memory"
          when: LEDGER_INSTALL

        - name: Verify Enterprise Linux OS Family architecture
          ansible.builtin.assert:
            that:
              - ansible_os_family == "RedHat"
            fail_msg: "K3s Server OS Family must be of type Rocky/CentOS"

        - name: Verify RedHat OS Family architecture
          ansible.builtin.assert:
            that:
              - ansible_distribution_major_version == '8' or ansible_distribution_major_version == '9'
            fail_msg: "K3s Server OS major version must be 8 or 9"

        - name: Get mount location of /var directory
          ansible.builtin.command: df -h /var
          register: mount_location

        # - name: Print mount location 
        #   ansible.builtin.debug:
        #     var: mount_location.stdout_lines[1].split()[0]

        - name: "Get available disk of {{ mount_location.stdout_lines[1].split()[0] }}"
          ansible.builtin.debug:
            var: ansible_mounts


        - name: "Ensure that free space on {{ mount_location.stdout_lines[1].split()[0] }} is greater than 30GB for k3s offline install"
          ansible.builtin.assert:
            that: item.size_available >= 32212254720
            fail_msg: "Free disk space for /var must be at least 30GB"
          when: 
            - item.device is match(mount_location.stdout_lines[1].split()[0])
            - item.mount == "/"
            - k8s_platform == "k3s"
            - k8s_offline
          with_items: "{{ ansible_mounts }}"


        - name: "Ensure that free space on {{ mount_location.stdout_lines[1].split()[0] }} is greater than 20GB"
          ansible.builtin.assert:
            that: item.size_available >= 21474836480
            fail_msg: "Free disk space for /var must be at least 20GB"
          when: 
            - item.device is match(mount_location.stdout_lines[1].split()[0])
            - item.mount == "/"
          with_items: "{{ ansible_mounts }}"

      when: k8s_platform == "k3s"

      

    