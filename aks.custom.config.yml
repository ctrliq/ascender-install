---
# This variable specificies which Kubernetes platform Ascender and its components will be installed on.
k8s_platform: aks
# Boolean indicating whether or not the kubeconfig file needs to be downloaded to the Ansible controller
download_kubeconfig: true
# Determines whether to use HTTP or HTTPS for Ascender and Ledger.
# If set to https, you MUST provide certificate/key options for the Installer to use.
k8s_lb_protocol: https
# Determines whether to use Route53's Domain Management (which is automated)
# Or a third-party service (e.g., Cloudflare, GoDaddy, etc.)
# If this value is set to false, you will have to manually set a CNAME record for
# {{ASCENDER_HOSTNAME }} and {{ LEDGER_HOSTNAME }} to point to the AWS
# Loadbalancers
USE_ROUTE_53: true
# If you need to apply AWS IAM permissions to a user to install Ascender on EKS, specify that user here
# (if a user already has permissions, you can ignore this variable)
EKS_USER: ascenderuser
# The name of the eks cluster to install Ascender on - if it does not already exist, the installer can set it up
EKS_CLUSTER_NAME: ascender-eks-cluster
# Specifies whether the EKS cluster needs to be provisioned (provision), exists but needs to be configured to support Ascender (configure), or exists and needs nothing done before installing Ascender (no_action)
EKS_CLUSTER_STATUS: provision
# The AWS region hosting the eks cluster
EKS_CLUSTER_REGION: us-east-1
# The eks cluster subnet in CIDR notation
EKS_CLUSTER_CIDR: "10.10.0.0/16"
# The kubernetes version for the eks cluster; available kubernetes versions can be found here:
EKS_K8S_VERSION: "1.28"
# The eks worker node instance types
EKS_INSTANCE_TYPE: "t3.large"
# The minimum number of eks worker nodes
EKS_MIN_WORKER_NODES: 2
# The maximum number of eks worker nodes
EKS_MAX_WORKER_NODES: 6
# The desired number of eks worker nodes
EKS_NUM_WORKER_NODES: 3
# The volume size of eks worker nodes in GB
EKS_WORKER_VOLUME_SIZE: 100
# A directory in which to place both temporary artifacts
# and timestamped Kubernetes Manifests to make Ascender/Ledger easy
# to uninstall
USE_AZURE_DNS: true
# ---aks variables---
# The name of the eks cluster to set up
AKS_CLUSTER_NAME: ascender-aks-cluster
tmp_dir: "{{ playbook_dir}}/../ascender_install_artifacts"
# DNS resolvable hostname for Ascender service. This is required for install.
ASCENDER_HOSTNAME: ascender.michaelford.io
# DNS domain for Ascender service. This is required when hosting on cloud services.
ASCENDER_DOMAIN: michaelford.io
# Namespace for Ascender Kubernetes objects
ASCENDER_NAMESPACE: ascender
# Administrator username for Ascender
ASCENDER_ADMIN_USER: admin
# Administrator password for Ascender
ASCENDER_ADMIN_PASSWORD: "myadminpassword"
# The image tag indicating the version of Ascender you wish to install
ASCENDER_VERSION: 24.0.0
# The version of the AWX Operator used to install Ascender and its components
ANSIBLE_OPERATOR_VERSION: 2.13.1
# Determines whether to keep the secrets required to encrypt within Ascender (important when backing up)
ascender_garbage_collect_secrets: false
# External PostgreSQL database name used for Ascender (this DB must exist)
ascender_replicas: 1
# Determines whether or not Ledger will be installed
LEDGER_INSTALL: true
# DNS resolvable hostname for Ledger service. This is required for install
LEDGER_HOSTNAME: ledger.michaelford.io
# Number of replicas for the Ledger web container
ledger_web_replicas: 1
# Number of replicas for the Ledger Parser container
ledger_parser_replicas: 1
# The image tag indicating the version of Ledger you wish to install
LEDGER_VERSION: latest
# The Kubernetes namespace in which Ledger objects will live
LEDGER_NAMESPACE: ledger
# Admin password for Ledger (the username is admin by default)
LEDGER_ADMIN_PASSWORD: myadminpassword
# Password for Ledger database
LEDGER_DB_PASSWORD: mydbpassword
ascender_setup_playbooks: true
