---
# ---Kubernetes-specific variables---

# This variable specificies which Kubernetes platform Ascender and its components will be installed on.
k8s_platform: eks # Options include k3s, eks and dkp, with more to come.

# Sets up a new kubernetes cluster when set to true
# - When k8s_platform is:
#   - k3s: k3s will be installed on that target server (ascender_host in the inventory)
#   - eks: an eks cluster will be instantiated in the aws account indicated in the aws-cli
#          config file (~/.aws/credentials)
kube_install: false

# Determines whether to use HTTP or HTTPS for Ascender and Ledger.
# If set to https, you MUST provide certificate/key options for the Installer to use.
k8s_lb_protocol: http #options include http and https

# ---eks variables---

# The name of the eks cluster to set up
EKS_CLUSTER_NAME: ascender-eks-cluster

# The AWS region hosting the eks cluster
EKS_CLUSTER_REGION: us-east-1

# The eks cluster subnet in CIDR notation
EKS_CLUSTER_CIDR: "10.10.0.0/16"

# The kubernetes version for the eks cluster; available kubernetes versions can be found here:
# https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html
EKS_K8S_VERSION: "1.28"

# The worker node instance types 
EKS_INSTANCE_TYPE: t3.large

# The minimum number of worker nodes that the cluster will run
EKS_MIN_WORKER_NODES: 2

# The maximum number of worker nodes that the cluster will run
EKS_MAX_WORKER_NODES: 6

# The desired number of worker nodes for the eks cluster
EKS_NUM_WORKER_NODES: 3

# The size of the Elastic Block Storage volume for each worker node
EKS_WORKER_VOLUME_SIZE: 100

# The ARN for the SSL certificate; required when k8s_lb_protocol is https.
# The same certificate is used for all components (currently Ascender and Ledger); 
# as such, we recommend that the certificate is set for a wildcard domain
# (e.g., *.example.com)
EKS_SSL_CERT: arn:aws:acm:<region>:xxxxxxxxxx:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxx

# The AWS public key that will allow SSH access to the worker nodes
EKS_PUBLIC_KEY: <aws-public-key>

# The Amazon Elastic Block Store Container Storage Interface (CSI) Driver provides
# a CSI interface used by Container Orchestrators to manage the lifecycle of Amazon EBS volumes.
# This variable specifies the version in use by the cluster; all releases can be found here:
# https://github.com/kubernetes-sigs/aws-ebs-csi-driver/releases
EKS_EBS_CSI_DRIVER_VERSION: "v1.24.0"

# ---Local artifact variables---

# A directory in which to place both temporary artifacts
# and timestamped Kubernetes Manifests to make Ascender/Ledger easy
# to uninstall
tmp_dir: "/tmp/ascender_install_artifacts"

# ---Ascender install variables---

# DNS resolvable hostname for Ascender service. This is required for install.
ASCENDER_HOSTNAME: ascender.example.com

# The domain name for all components; required when k8s_platorm=="eks"
ASCENDER_DOMAIN: example.com

# k8s namespace for Ascender k8s objects
ASCENDER_NAMESPACE: ascender

# Administrator username for Ascender
ASCENDER_ADMIN_USER: admin

# Administrator password for Ascender
ASCENDER_ADMIN_PASSWORD: "myadminpassword"

# The OCI container image for Ascender
ASCENDER_IMAGE: ghcr.io/ctrliq/ascender

# The image tag indicating the version of Ascender you wish to install
ASCENDER_VERSION: 23.3.1

# The version of the AWX Operator used to install Ascender and its components
ANSIBLE_OPERATOR_VERSION: 2.7.0

# Determines whether to keep the secrets required to encrypt within Ascender (important when backing up)
ascender_garbage_collect_secrets: true

# # External PostgreSQL ip or url resolvable by the cluster
# ASCENDER_PGSQL_HOST: "ascenderpghost.example.com" 

# # External PostgreSQL port, this usually defaults to 5432
# ASCENDER_PGSQL_PORT: 5432 

# # External PostgreSQL username
# ASCENDER_PGSQL_USER: ascender

# # External PostgreSQL password
# NOTE: Do NOT use the special characters in the postgres password (Django requirement)
# ASCENDER_PGSQL_PWD: mypgadminpassword

# # External PostgreSQL database name used for Ascender (this DB must exist)
# ASCENDER_PGSQL_DB: ascenderdb


### All of these options are unnecessary to change, but will allow you to tweak your Ascender deployment if you choose to change them
ascender_replicas: 1
ascender_image_pull_policy: Always


# ---Ledger install variables---

# Determines whether or not Ledger will be installed
LEDGER_INSTALL: true

# DNS resolvable hostname for Ledger service. This is required for install.
LEDGER_HOSTNAME: ledger.example.com

# The OCI container image for Ledger
LEDGER_WEB_IMAGE: ghcr.io/ctrliq/ascender-ledger/ledger-web

# The number of ledger web pods - this is good to ensure high availability
ledger_web_replicas: 1

# The OCI container image for the Ledger Parser
LEDGER_PARSER_IMAGE: ghcr.io/ctrliq/ascender-ledger/ledger-parser

# The number of ledger parser pods - this is good to ensure high availability
ledger_parser_replicas: 1

# The OCI container image for the Ledger Database
LEDGER_DB_IMAGE: ghcr.io/ctrliq/ascender-ledger/ledger-db

# The image tag indicating the version of Ledger you wish to install
LEDGER_VERSION: latest

# The Kubernetes namespace in which Ledger objects will live
LEDGER_NAMESPACE: ledger

# Admin password for Ledger (the username is admin by default)
LEDGER_ADMIN_PASSWORD: "myadminpassword"

# Password for Ledger database
LEDGER_DB_PASSWORD: "mydbpassword"